import std.Argv;
import io.FileSystem;
import io.FilePath;
import io.File;
import io.Printer;

every Main is:

	needs FileSystem, Argv, Printer;

	main() {
		var FilePath = FileSystem.getPath(Argv.getArgv()[2]);
		var File from FilePath;
		var deps = '';
		var mocks = '';
		var classmoduledir = '';
		var tabledir = Argv.getArgv()[3];

		while !File.eof() {
			var Text = readLine(File) + "";
			if Text.substr(0, 6) == "module" {
				classmoduledir = Text.substr(7, -1) + "/";
				continue;
			}
			if Text.substr(0, 5) == "every" then break;
			if Text.charAt(0) == "#" then continue;
			if Text.charAt(0) == "@" then continue;
			if Text == "" then continue;
			var classname = Text.substr(7, -1);

			var moduleparts = classname.split(".");

			var depmoduledir = "";
			if moduleparts.getSize() > 1 {
				classname = moduleparts[moduleparts.getSize() - 1];
				//moduleparts.pop(); // shed classname
				depmoduledir = '.'.join(moduleparts).substr(0, -1 - classname.getSize()) + "/";
			}

			if classname.substr(-4) == "Mock" && depmoduledir.substr(0, 8) == 'wkto.gen' {
				mocks += ' ' + tabledir + '/' + depmoduledir + classname + '.table.md5';
			}

			deps += ' ' + tabledir + '/' + depmoduledir + classname + '.table.md5';
		}

		Printer.printLine('bin/wakeobj/' + classmoduledir + (FilePath.getBasename() + "").substr(0, -3) + ".o:" + deps);
		Printer.printLine(tabledir + '/' + classmoduledir + (FilePath.getBasename() + "").substr(0, -3) + ".table:" + deps);
		Printer.printLine('MOCKS := $(MOCKS)' + mocks);
	}

	Text -- readLine(File) {
		var Text = "";
		var $Text = "";

		while !File.eof() {
			$Text = File.read(1);
			if $Text == '\n's then break;
			Text += $Text;
		}

		return Text;
	}
